{"version":3,"file":"input-element.js","sourceRoot":"","sources":["src/input-element.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,aAAa,EACb,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,GAAG,EAEJ,MAAM,aAAa,CAAC;AAErB,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuEjB,CAAC;AAGF,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAc1C;QACE,KAAK,EAAE,CAAC;QARH,UAAK,GAAW,EAAE,CAAC;QAGnB,gBAAW,GAAW,EAAE,CAAC;QAM9B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAqB,CAAC;QAClE,sCAAsC;QACtC,+BAA+B;QAC/B,iCAAiC;IACnC,CAAC;IAED,kEAAkE;IAElE,MAAM;QACJ,kEAAkE;QAClE,MAAM,EAAC,WAAW,EAAC,GAAG,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAA;;;;;;;uDAOwC,WAAW;;KAE7D,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,KAAqB;QAC3C,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,IAAI,CAAC,cAAc,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACrC,CAAC;CACF,CAAA;AA3CQ,mBAAM,GAAG,MAAM,CAAC;AAGvB;IADC,QAAQ,EAAE;0CACU;AAGrB;IADC,QAAQ,EAAE;2CACe;AAG1B;IADC,QAAQ,EAAE;iDACqB;AAVrB,YAAY;IADxB,aAAa,CAAC,WAAW,CAAC;GACd,YAAY,CA4CxB;SA5CY,YAAY","sourcesContent":["import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  css,\n  PropertyValues\n} from 'lit-element';\n\nconst styles = css`\n  :host {\n    display: block;\n    display: inline-block;\n    position: relative;\n    --form-input-background-color: #fff;\n    --form-input-border-color: rgba(0,0,0,.5);\n  }\n  .label--container{\n    display: flex;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    border-color: var(--form-input-border-color);\n    border-width: 1px;\n  }\n  .label--container:before,\n  .label--container:after{\n    content: '';\n    height: 100%;\n    display: block;\n    box-sizing: border-box;\n  }\n  .label--container:before{\n    width: .5em;\n    box-sizing: border-box;\n    border-top-style: solid;\n    border-bottom-style: solid;\n    border-left-style: solid;\n  }\n  .label--container:after{\n    flex: 1 1 auto;\n    border-top-style: solid;\n    border-bottom-style: solid;\n    border-right-style: solid;\n  }\n  .label__notch {\n    height: 100%;\n    border-top-style: solid;\n    border-bottom-style: solid;\n    box-sizing: border-box;\n  }\n  ::slotted(*){\n    all: unset;\n    padding: .75em;\n    font-size: inherit;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    z-index: 1;\n    position: relative;\n  }\n  label {\n    will-change: transform;\n    display: inline-block;\n    position: relative;\n    top: .5em;\n  }\n  :host([active]) .label__notch {\n    margin: 0 -.25em;\n    border-top-style: none;\n  }\n  :host([active]) label {\n    transform: translateY(-87.5%) scale(.75);\n  }\n  :host([active]) .label--container {\n    border-width: 2px;\n  }\n`;\n\n@customElement('cwc-input')\nexport class InputElement extends LitElement {\n  static styles = styles;\n\n  @property()\n  public name?: string;\n\n  @property()\n  public value: string = '';\n\n  @property()\n  public placeholder: string = '';\n\n  protected readonly _input: HTMLInputElement;\n\n  constructor() {\n    super();\n    this._input = document.createElement('input') as HTMLInputElement;\n    // this._input.name = this.name || '';\n    // this._input.type = 'hidden';\n    // this.appendChild(this._input);\n  }\n\n  // <input name=\"${name}\" type=\"text\" @change=\"${this._onChange}\"/>\n\n  render() {\n    //  const input = (this.constructor as typeof InputElement).input;\n    const {placeholder} = this;\n    return html`\n        <div class=\"label--container\">\n          <div class=\"label__notch\">\n            <label for=\"input\">Elgbert</label>\n          </div>\n        </div>\n        <slot>\n          <input id=\"input\" type=\"text\" placeholder=\"${placeholder}\" />\n        </slot>\n    `;\n  }\n\n  protected async updated(props: PropertyValues) {\n    super.updated(props);\n    await this.updateComplete;\n    this._input.name = this.name || '';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cwc-input': InputElement;\n  }\n}\n"]}