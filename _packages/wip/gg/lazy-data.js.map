{"version":3,"file":"lazy-data.js","sourceRoot":"","sources":["lazy-data.ts"],"names":[],"mappings":"AAAA,MAAM,cAAc,GAAG,CAAC,EAAE,cAAc,EAA6B,EAAE,EAAE,CAAC,cAAc,CAAC;AAEzF,MAAM,kBAAkB,GAAG,CAAC,EAAW,EAAE,EAAE,CAAC,CAAC,IAAY,EAAE,EAAE;IAC3D,MAAM,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;IAChC,IAAI,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE;QAC3C,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACvD,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;KAC9B;AACH,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,CAAC,KAAe,EAAE,EAAE,CAAC,CAAC,EAAW,EAAE,EAAE;IAC/D,MAAM,KAAK,GAAG,kBAAkB,CAAC,EAAE,CAAC,CAAC;IACrC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC,CAAC;AAEF,SAAS,0BAA0B,CAAC,IAAsB,EAAE,UAAoB;IAC9E,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtE,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9D,CAAC;AAED,SAAS,cAAc,CAAC,OAAgB,EAAE,UAAoB;IAC5D,MAAM,KAAK,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC;IAC9C,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,GAAG,0BAA0B,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;IAC/E,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,sBAAsB,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;IACxG,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,EAAC,MAAM,EAAC,EAAE,EAAE;QAClD,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;QACzC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,8CAA8C;IAC9C,OAAO,EAAE,CAAC,MAAe,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;CAC/E,CAAC;AAEF,MAAM,UAAU,OAAO,CAAC,OAAgB,EAAE,UAAoB;IAC5D,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC7C,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAC5G,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,CAAC;AAED,eAAe,OAAO,CAAC","sourcesContent":["const isIntersecting = ({ isIntersecting }: IntersectionObserverEntry) => isIntersecting;\n\nconst applyDataAttribute = (el: Element) => (attr: string) => {\n  const dataAttr = `data-${attr}`;\n  if (el.hasAttribute(dataAttr) && attr in el) {\n    el.setAttribute(attr, el.getAttribute(dataAttr) || '');\n    el.removeAttribute(dataAttr);\n  }\n};\n\nconst applyDataAttributes = (attrs: string[]) => (el: Element) => {\n  const apply = applyDataAttribute(el);\n  attrs.forEach(apply);\n};\n\nfunction querySelectorDataAttribute(root: Element|Document, attributes: string[]): Element[] {\n  const selector = attributes.map((attr) => `[data-${attr}]`).join(',');\n  return [].concat.apply([], root.querySelectorAll(selector));\n}\n\nfunction elementVisible(element: Element, attributes: string[]) {\n  const apply = applyDataAttributes(attributes);\n  const elements = [element, ...querySelectorDataAttribute(element, attributes)];\n  elements.forEach(apply);\n  element.setAttribute('data-lazy', 'loaded');\n}\n\nexport const observer = 'IntersectionObserver' in window ? new IntersectionObserver((entries, observer) => {\n  entries.filter(isIntersecting).forEach(({target}) => {\n    const event = new CustomEvent('visible');\n    target.dispatchEvent(event) && observer.unobserve(target);\n  });\n}) : {\n  /** @todo make polyfill for shitty browsers */\n  observe: (target: Element) => target.dispatchEvent(new CustomEvent('visible'))\n};\n\nexport function observe(element: Element, attributes: string[]) {\n  element.setAttribute('data-lazy', 'loading');\n  element.addEventListener('visible', () => elementVisible(element, attributes), {passive: true, once: true});\n  observer.observe(element);\n}\n\nexport default observe;"]}