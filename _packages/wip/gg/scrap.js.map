{"version":3,"file":"scrap.js","sourceRoot":"","sources":["scrap.ts"],"names":[],"mappings":";AAIA,SAAS,eAAe,CACvB,OAAU,EACV,SAAY,EACZ,IAAc,EACd,OAA6C,EAC7C,OAA6C;IAE7C,MAAM,KAAK,GAAG,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACtD,MAAM,QAAQ,GAAG,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE;QACrC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CACvE,CAAC;AACH,CAAC;AAED,MAAM,GAAG,GAAG;IACX,IAAI,EAAE,EAAE;CACR,CAAC;AAEF,MAAM,GAAG,GAAG;IACV,GAAG,EAAE,KAAK;CACX,CAAC;AAEF,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACrC,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC","sourcesContent":["interface attributeSourceCallback<E extends Element, K extends keyof E, T extends keyof ElementEventMap> {\n (element: E, attribute: K, type: T|string): Boolean;\n}\n\nfunction attributeSource<E extends any, K extends keyof E, T extends keyof ElementEventMap>(\n element: E,\n attribute: K,\n type: T|string,\n sucsess?: PromisedElementEventCallback<Event>,\n failure?: PromisedElementEventCallback<Event>\n): Promise<any> {\n const valid = sucsess || (() => !!element[attribute]);\n const resolved = (resolve: any) => resolve(element[attribute]);\n return new Promise((resolve) => valid()\n   ? resolved(resolve)\n   : promisedEvent(element, type, valid, failure).then(resolved(resolve))\n );\n}\n\nconst elg = {\n bert: ''\n};\n\nconst foo = {\n  bar: false,\n};\n\nattributeSource(elg, 'bert', 'load');\nattributeSource(foo, 'bar', 'load');"]}